{
  "repository": {
    "variable": {
			"patterns": [
        {
          "match": "_",
          "name": "variable.other.blank.go",
        },
        {
          "match": "\\w+(?=\\s\\:\\=)",
          "name": "variable.other.assignment.go",
        },
        {
          "match": "(\\w+)(,)\\s([a-zA-Z]+)(?=\\s\\:\\=)",
          "captures": {
            "1": { "name": "variable.other.assignment.go" },
            "2": { "name": "punctuation.other.comma.go" },
            "3": { "name": "variable.other.assignment.go" },
          },
          "patterns":[
            {
              "match": "_",
              "name": "variable.other.blank.go",
            },
          ]
        },
        {
          "match": "(?<=\\()(?>\\w+)(?=\\))",
          "name": "variable.other.param.go",
        },
        {
          "match": "(?<=\\*)\\w+",
          "name": "variable.other.pointer.go",
        },
        {
          "match": "(?<=\\&)(?>\\w+)",
          "name": "variable.other.address.go",
        },
        {
          "match": "(?<!var)\\s*(\\w+(?:\\.\\w+)*(?>,\\s*\\w+(?:\\.\\w+)*)*)(?=\\s*=(?!=))",
          "captures": {
            "1": {
              "patterns": [
                {
                  "match": "\\d\\w*",
                  "name": "invalid.illegal.identifier.go"
                },
                {
                  "match": "_",
                  "name": "variable.other.blank.go",
                },
                {
                  "match": "\\w+(?:\\.\\w+)*",
                  "name": "variable.other.assignment.go",
                  "captures": {"0": {"patterns": [{"include": "#punctuation"}]}}
                },
                {"include": "#punctuation"},
              ]
            }
          }
        },
				{
					"match": "(\\w+(?:,\\s*\\w+)*)(\\s+\\*?\\w+(?:\\.\\w+)?\\s*)?(?=\\s*=)",
					"captures": {
						"1": {
							"patterns": [
								{
									"match": "\\d\\w*",
									"name": "invalid.illegal.identifier.go"
								},
								{
									"match": "\\w+",
									"name": "variable.other.assignment.go"
								},
								{"include": "#punctuation"}
							]
						},
						"2": {"patterns": [{"include": "$self"}]}
					}
				},
				{
					"match": "(\\w+(?:,\\s*\\w+)*)(\\s+(\\[(\\d*|\\.\\.\\.)\\])*\\*?(<-)?\\w+(?:\\.\\w+)?\\s*[^=].*)",
					"captures": {
						"1": {
							"patterns": [
								{
									"match": "\\d\\w*",
									"name": "invalid.illegal.identifier.go"
								},
								{
									"match": "\\w+",
									"name": "variable.other.declaration.go"
								},
								{"include": "#punctuation"}
							]
						},
						"2": {"patterns": [{"include": "$self"}]}
					}
				},
				// {
				// 	"begin": "\\(",
				// 	"beginCaptures": {"0": {"name": "punctuation.definition.variables.begin.bracket.round.go"}},
				// 	"end": "\\)",
				// 	"endCaptures": {"0": {"name": "punctuation.definition.variables.end.bracket.round.go"}},
				// 	"patterns": [
				// 		// {
        //     //   "include": "$self"
        //     // },
        //     {
        //       "match": "\\w+",
        //       "name": "variable.other.param.go"
        //     },
				// 	]
        // },
        {
          "begin": "\\b(var)\\s+",
          "beginCaptures": {"1": {"name": "keyword.var.go"}},
          "end": "(?!\\G)",
          "patterns": [{"include": "$self"}]
        },
        // {
        //   "match": "(var)(\\s\\w+)\\s(\\w+)",
        //   "captures": {
        //     "1": {"name": "keyword.var.go"},
        //     "2": {"name": "variable.other.go"},
        //     "3": {"name": "entity.name.type.go"},
        //   },
        // },
			]
		}
  }
}
